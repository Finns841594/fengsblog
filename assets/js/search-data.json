{
  
    
        "post0": {
            "title": "Review for coding for CS50 Course",
            "content": "I almost finished my CS50 course except for the final project! . Before I start my final project, I decide to take a deep review about what I have learned from this course. It will be a take-out for me for my furture study as well. . 1 Flask . By using flask, the skills for managing the database(sqlite), editing webpage(html, css, javascript), and Python programming are connected. | | .",
            "url": "https://finns841594.github.io/fengsblog/notes/2022/08/31/CS50-review.html",
            "relUrl": "/notes/2022/08/31/CS50-review.html",
            "date": " • Aug 31, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Notes for coding for CS50 Course",
            "content": "Having CS50 course now! Taking some notes here about my struggling things on coding. . The first home work is making a small game with visualized program platform from MIT, below is my work: https://scratch.mit.edu/projects/712728725 . | In programing homework “substitution”: Its important to remeber that a string is an array of chars: The following 2 lines: string text = “Hi!”; printf(“%i”, text[0]) will return the acsii code of H while the following one line: printf(“%c”, text[0]) will print out the letter H. . | When testting a program, I might need to type in several inputs repeatly. Here is the simple way to do it ‘automatically’: Create a txt file, named it as ‘test.txt’. Typed in the input, one line one input, save it. When run a program, do it like this: ./program_name another_input_if_needed &lt; test.txt then the program will take the input from text.txt when it prompts for the input. . | Use the following code at the outside of main() to create a gloable const variable: ‘const int HEADER_SIZE = 44;’ . | Suprised by that fopen(“fileaddress”,”open_method”) function: If the file do not exist at the address, this function will create one; If the file arealdy exits, it erase the content of the file. . | Use sizeof(int16_t) to get the length of the type of data, in %lu, which is unsigned long, here the answer is 2 (bytes); sizeof(char) returns 1; sizeof(int) returns 4; sizeof(float) returns 4; sizeof(double) returns 8; . | It is easy to under stand the pointer by writing a program that swap two values: int main(void) { int a = get_int(&quot;A: &quot;); int b = get_int(&quot;B: &quot;); printf(&quot;A is %i, B is %i n&quot;, a, b); swap(&amp;a, &amp;b); printf(&quot;After swap nA is %i, B is %i n&quot;, a, b); } void swap(int *x, int *y) { int z = *x; // Store the value of point x to the variable z *x = *y; // write the value of point b to the point position x addressed *y = z; // write the value of variable z to the point position y addressed } &quot; &amp;a will get the address of variable a, it is a pointer: &#39;int *z = &amp;a;&#39; if we print the z, we get a string which represents an address: &quot;printf(&#39;z: %p n&#39;, z);&quot; &quot;0x1234567&quot; if we print the *z, we get the value at the address z: &quot;printf(&#39;z: %i n&#39;, *z);&quot; &quot;50&quot; . | fopen(), fread(),fseek(), . | about the point, check the code below to understand what &amp; and * being used. | int main(void) { int a = 101; int *b = &amp;a; printf(&quot;1: %i n&quot;, a); printf(&quot;2: %p n&quot;, &amp;b); printf(&quot;3: %p n&quot;, b); printf(&quot;4: %i n&quot;, *b); } . Most of the time bug happens with passing wrong type of data into a function, so it is super important to know that type of data you are passing! . | ”” is different from’’ in C; ““is for strings, for example “A string is written here”, while as ‘A’ is equavalent to A’s ascii code 65. . | Several ways to build a dict quickly in Python: . a = dict(one=1, two=2, three=3) . b = {‘one’: 1, ‘two’: 2, ‘three’: 3} . c = dict(zip([‘one’, ‘two’, ‘three’], [1, 2, 3])) # This one is so cool . d = dict([(‘two’, 2), (‘one’, 1), (‘three’, 3)]) . e = dict({‘three’: 3, ‘one’: 1, ‘two’: 2}) . a == b == c == d == e . | For the easier programing, its better to comment on the variable that created, what type of data it is, and what structure it has. This makes things much easier! . | In SQL, ORDER BY can have several statements. The First has the highest priority, for example: SELECT movies.title, ratings.rating FROM movies JOIN ratings ON movies.id = ratings.movie_id WHERE movies.year = 2010 ORDER BY ratings.rating DESC, movies.title ASC; The command above will order the result first by the rating, then if two movies have the same rating, the one with title name alphabetical priority will be the ordered forward the other one. . | In html for using margin setting by passing different amount of parameters: margin: up right down left; margin: up right&amp;left down; margin: up&amp;down right&amp;left; margin: all-sides; . |",
            "url": "https://finns841594.github.io/fengsblog/notes/2022/07/19/CS50-notes.html",
            "relUrl": "/notes/2022/07/19/CS50-notes.html",
            "date": " • Jul 19, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Questionnaire 04",
            "content": "How is a grayscale image represented on a computer? How about a color image? A grayscale image is stored as a matrix with same columns and rows as the resolution size. Each number in this matrix is ranged within 0~255, which represents the darkness of the pixel. A color image has three matrix which stored the information of the image by three channels: red, green, blue. . | How are the files and folders in the ‘MNIST_SAMPLE’ dataset structured? Why? The ‘MNIST’ datasets follows a common layout for machine learning datasets: seperate folders for the trainning set and the validation set(and/or test set). . | Explain how the “pixel similarity” approach to classifying digits works. Based on the matrix we mentioned for the question one. We assume that the image of a number should have similar gray pixel distribution as other images of the same number. So we caculate the average number of the matrix which presents the images of a number as a ‘standard’, when we classifying a test image, we compare the piexel number of it to our ‘standard’, and give the inference result based on the similarity. . | What is a list comprehension? Create one now that selects odd numbers from a list and doubles them. Its a very useful feature of Python. It is well explained as follow: ‘List and dictionary comprehensions are a wonderful feature of Python. Many Python programmers use them every day, including the authors of this book—they are part of “idiomatic Python.” But programmers coming from other languages may have never seen them before. There are a lot of great tutorials just a web search away, so we won’t spend a long time discussing them now. Here is a quick explanation and example to get you started. A list comprehension looks like this: new_list = [f(o) for o in a_list if o&gt;0]. This will return every element of a_list that is greater than 0, after passing it to the function f. There are three parts here: the collection you are iterating over (a_list), an optional filter (if o&gt;0), and something to do to each element (f(o)). It’s not only shorter to write but way faster than the alternative ways of creating the same list with a loop.’ . | What is a “rank-3 tensor”? A 3 dimensional tensor. . | What is the difference between tensor rank and shape? How do you get the rank from the shape? The rank shows how many dimension this tensor has. While the shape tells you the length of each dimension or axis. If a tensor has shape of 12812830, we say its a rank 3 tensor. . | What are RMSE and L1 norm? RMSE, root mean squared error, which is also called as L2 norm, take the mean of the square of differences and then take the square root: sqrt((value - mean)**2) L1 norm, mean absolute difference, take the mean of the absolute value of difference. . |",
            "url": "https://finns841594.github.io/fengsblog/quesionnaire/2022/06/28/questionnaire-04.html",
            "relUrl": "/quesionnaire/2022/06/28/questionnaire-04.html",
            "date": " • Jun 28, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Lesson 2 Questionnaire",
            "content": "Provide an example of where the bear classification model might work poorly in production, due to structural or style differences in the training data. | If there have no black-and-white images of bears in the trainning data, the model might do poorly in classifier mission when we input a black-and-white bear image. So when we collecting the training data, we should take the type of data that would be used in practical mission into consideration. . Where do text models currently have a major deficiency? | Deep learning is currently not good at generating correct natural language responses. . What are possible negative societal implications of text generation models? | Auto generated text contents can be used to spread disinformation, create unrest, and encourage conflict, which will bring much bigger influence than before. Because the speed of generated such contents by machine learning model is thousands of times greater than any troll farm previously seen. . In situations where a model might make mistakes, and those mistakes could be harmful, what is a good alternative to automating a process? | Use this model as a tool for human for the specific task. Combineing the efficiency of a machine and the accuracy of a human. . What kind of tabular data is deep learning particularly good at? | Natrual language and high-cardinality categorical columns(discrete numbers such as zip code or product ID). . What&#39;s a key downside of directly using a deep learning model for recommendation systems? | It recommands based on the relativeness. So a deep learning model may recommend something highly relative which you already known. . What are the steps of the Drivetrain Approach? | Define the Objective -&gt; Actions can be taken(levers) -&gt; Data can be used After the logic line above is cleared, then decide which model to be used. . &quot;We use data not just to generate more data (in the form of predictions), but to produce actionable outcomes.&quot; . How do the steps of the Drivetrain Approach map to a recommendation system? | 1.Define the Objective: recommending a book based on the book that a user has purchased; 2.Actions: train a model which output the data which describes the revelance of each books in our libarary. 3.Data: names of Books each user has bought; . Belows are from course: The objective of a recommendation engine is to drive additional sales by surprising and delighting the customer with recommendations of items they would not have purchased without the recommendation. The lever is the ranking of the recommendations. New data must be collected to generate recommendations that will cause new sales. Finally, you could build two models for purchase probabilities, conditional on seeing or not seeing a recommendation. . What I got: Go deeper into the motivation. Recommending a book here is to sell it. . Create an image recognition model using data you curate, and deploy it on the web. | See my previous post: https://finns841594.github.io/fengsblog/machine%20learning/2022/06/01/first-complete-practice.html . Deployed at here: https://hub.gke2.mybinder.org/user/finns841594-dog_classifier-bu59zdrv/voila/render/Dog_Classifier.ipynb?token=saWa_1L4SZ2zaDWTk5Q1Dg . What is DataLoaders? | A class that stores the dataloads that you passed to it. Usually used in following way: dls = DataBlock.dataloaders(path) . What four things do we need to tell fastai to create DataLoaders? | 1, what kind of data 2, how to get the list of items 3, how to label these items 4, how to create the validation set . From where to get what data, in what way to label them and in what way to split validation set. . What does the splitter parameter to DataBlock do? | To tell the DataBlock how much percentage of the all data should be used for validation. . How do we ensure a random split always gives the same validation set? | Give the splitter same random seed. . What letters are often used to signify the independent and dependent variables? | x for the independent variables while y for the dependent variables. . What&#39;s the difference between the crop, pad, and squish resize approaches? When might you choose one over the others? | Cropping may lose pixels(informations), padding may add a lot of extra black pixels, squish resizing leads to unrealistic shapes. All three methonds have negative influence on model trainning. Usually we use random resize crop. . What is data augmentation? Why is it needed? | It means to creating random variations of the data. The variations has same meaning(key information) of the data, but slightly different. It is needed because It can help trainning our model to caputre the essential part of the data instead of caring about less important details. . 17 What is the difference between item_tfms and batch_tfms? . item_tfms applies on single item one by one, batch_tfms applies on the full batch at once. . 18 What is a confusion matrix? . It is for us to evaluate the performence of model, and to anylise where are the errors. It is a matrix shows the coherence of the predict and the result. . 19 What does export save? . It saved the parameters and the model together in fastai format. . 20 What is it called when we use a model for getting predictions, instead of training? . inference . 21 What are IPython widgets? . GUI components . 22 When might you want to use CPU for deployment? When might GPU be better? . Use CPU when you don&#39;t need to deal with many identical works at the same time. Use GPU when you need that. . 23 What are the downsides of deploying your app to a server, instead of to a client (or edge) device such as a phone or PC? . First, the framework which helps you achive that might not support the layer or function we are using for trainning the model. In addition, its time costing to adapt the application to the different version of os on different devices by small team(or alone). . 24 What are three examples of problems that could occur when rolling out a bear warning system in practice? . Most of the problems occured because the quality of images for trainning are different from the images for inferencing in practice, which leads the desension of accuracy. For example, low quality for inferencing, video data instead of images, bears in the images are in rarely seen position, etc. . 25 What is &quot;out-of-domain data&quot;? . Domain here means the range of data we used for trainning. Out-of-domain data thus means the type or the quality of data for inferencing is different from the data we used for the trainning. . 26 What is &quot;domain shift&quot;? . data that our model sees changed with the time. . 27 What are the three steps in the deployment process? . Manula process, to limited scope deployment, to gradual expansion. .",
            "url": "https://finns841594.github.io/fengsblog/questionnaire/2022/06/08/lesson2questionnaire.html",
            "relUrl": "/questionnaire/2022/06/08/lesson2questionnaire.html",
            "date": " • Jun 8, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "First Complete Practice",
            "content": "It&#39;s my first complete machine learning practice from data-collecting to trainning to deployment. It&#39;s all followed the instruction of the online course from fastai, here&#39;s the link for the following contents: . https://github.com/fastai/fastbook/blob/master/02_production.ipynb . Data Collecting . The data that I have used for my previous Maching Learning practicing are all provided by the course, which means I don&#39;t need to collect them at all. So this is my first time to collect the data by my own. . Here, as the guidence from fastai course, I use fastai tool and bing api for the data gathering. But I changed my object from building a bear classifier to building a dog classifer. . First, regerster for the Bing Image Search service, to get the key. Second, use &#39;search_images_bing&#39; to collect images, clean them. . Regester for the Bing Image Search . Here&#39;s ther instruction: https://course.fast.ai/images . Basically I regersted from this website: https://www.microsoft.com/en-us/bing/apis/bing-image-search-api . And got a key, insert it into the following code. . !pip install -Uqq fastbook #用以安装fastbook（如未）或升级fastbook（如已安装）。难道在线的环境里每次都要运行这个吗？ import fastbook fastbook.setup_book() #这是干啥用的 from fastbook import * from fastai.vision.widgets import * . key = os.environ.get(&#39;AZURE_REARCH_KEY&#39;, &#39;xxx&#39;) #need to replace &#39;xxx&#39; with the api key from Bing . Collecting images and clean it . Images Downloading . dog_types = &#39;Shiba&#39;, &#39;alaskan&#39;, &#39;border collie&#39;, &#39;husky&#39; #目标是搜索4种修勾的照片 path = Path(&#39;dogs&#39;) #把他们存在根目录文件夹下的dogs文件夹里 path.mkdir() #基于变量path的内容在根目录下创建文件夹? #one for-loop downloads images of four types of dog. I love programing! for i in dog_types: dest = (path/i) #新颖的创建文件夹的方法 dest.mkdir(exist_ok = True) #创建文件夹? results = search_images_bing(key, f&#39;{i} dog&#39;, min_sz=128, max_images=150) #search_images_bing的输出是什么数据类型呢？为什么下面还要再下载一次呢？另外样本数量并不是越多越好，这里150是课程的推荐数量 download_images(dest, urls = results.attrgot(&#39;contentUrl&#39;)) . testdest = &#39;images/testimg.jpg&#39; testimgurl = results.attrgot(&#39;contentUrl&#39;) download_url(testimgurl[3], testdest) im = Image.open(testdest) im.to_thumb(128,128) . . 100.03% [7708672/7706700 00:00&lt;00:00] Images Cleaning &amp; Data Processing . fns = get_image_files(path) #把path下所有的图片装到变量fns里？ fns . (#570) [Path(&#39;dogs/husky/00000047.jpg&#39;),Path(&#39;dogs/husky/00000055.jpg&#39;),Path(&#39;dogs/husky/00000075.jpeg&#39;),Path(&#39;dogs/husky/00000036.jpg&#39;),Path(&#39;dogs/husky/00000030.jpg&#39;),Path(&#39;dogs/husky/00000097.jpg&#39;),Path(&#39;dogs/husky/00000082.JPG&#39;),Path(&#39;dogs/husky/00000148.jpg&#39;),Path(&#39;dogs/husky/00000110.jpg&#39;),Path(&#39;dogs/husky/00000029.jpg&#39;)...] . failed = verify_images(fns) #用来检测无法打开的图片，并且将它们储存到failed里面 failed . (#4) [Path(&#39;dogs/husky/00000018.jpeg&#39;),Path(&#39;dogs/border collie/00000073.JPG&#39;),Path(&#39;dogs/border collie/00000143.jpg&#39;),Path(&#39;dogs/Shiba/00000082.JPG&#39;)] . failed.map(Path.unlink); #将verify_images检测出来无法打开的图像删除掉，为什么要加个分号呢？为什么是用unlink来删除呢？ . dogs = DataBlock( blocks = (ImageBlock, CategoryBlock), #specific the independent variables (x) and dependent variables (y) get_items = get_image_files, #uses get_image_files to get our images? splitter = RandomSplitter(valid_pct=0.2, seed=42), #split the training set and validation set get_y = parent_label, #parental_label is a function for getting the name of the folder a file is in item_tfms = Resize(128)) #necessary to resize the images with different sizes into one specific size dls = dogs.dataloaders(path) #so we define &#39;dogs&#39; as a DataBolck, and a DataBlock has the attribute named dataloaders, which we input a path in it. . dogs = dogs.new(item_tfms=RandomResizedCrop(224, min_scale=0.3), batch_tfms=aug_transforms()) #we can change the tfms methond after we defined the DataBlock dls = dogs.dataloaders(path) #but we need to pass the path to the DataBlock once again dls.train.show_batch(max_n=4, nrows=1, unique=True) #take a look at one exanple about how it is resized . Training Model . Training model is actually quite simple here by the fastai. . learn = vision_learner(dls, resnet18, metrics=error_rate) #any other learner exists? other architecture? other metrics? learn.fine_tune(10) . epoch train_loss valid_loss error_rate time . 0 | 2.043423 | 0.525527 | 0.221239 | 00:11 | . epoch train_loss valid_loss error_rate time . 0 | 0.688256 | 0.400125 | 0.168142 | 00:11 | . 1 | 0.594992 | 0.354650 | 0.150442 | 00:12 | . 2 | 0.509297 | 0.386697 | 0.132743 | 00:13 | . 3 | 0.454446 | 0.427901 | 0.141593 | 00:11 | . 4 | 0.409606 | 0.531117 | 0.132743 | 00:11 | . 5 | 0.373417 | 0.517626 | 0.141593 | 00:11 | . 6 | 0.328626 | 0.515209 | 0.150442 | 00:12 | . 7 | 0.307224 | 0.490491 | 0.141593 | 00:12 | . 8 | 0.288390 | 0.484112 | 0.132743 | 00:11 | . 9 | 0.266848 | 0.480838 | 0.141593 | 00:12 | . interp = ClassificationInterpretation.from_learner(learn) interp.plot_confusion_matrix() . interp.plot_top_losses(10, nrows=2) #我算是知道为什么训练出来结果这么差了！ #一是，搜集到的数据里面有很多标的是阿拉斯加结果是哈士奇！比如第一第二章明显就是哈士奇！因为在网络上这两个动物经常关联！ #二是，阿拉斯加和哈士奇我都分不清！太相似了！第九个结果真的很像秋田犬！第八个简直像柯基 . cleaner = ImageClassifierCleaner(learn) cleaner . for idx in cleaner.delete(): cleaner.fns[idx].unlink() #to delete . #code above has the problem with moving file which has same name with a file in the destination folder. for idx,cat in cleaner.change(): f = cleaner.fns[idx] if os.path.exists(f) is True: os.rename(f, f.parent/(f.parent.name+f.stem+f.suffix)) shutil.move(str(f.parent/(f.parent.name+f.stem+f.suffix)), path/cat) . dls = dogs.dataloaders(path) #remeber to reload the dls after data cleaning learn = vision_learner(dls, resnet18, metrics=error_rate) #how can I use the parameters from previous trainning? or should I useit? learn.fine_tune(5) . epoch train_loss valid_loss error_rate time . 0 | 1.854908 | 0.336664 | 0.141593 | 00:11 | . epoch train_loss valid_loss error_rate time . 0 | 0.598648 | 0.240268 | 0.115044 | 00:11 | . 1 | 0.559621 | 0.276280 | 0.106195 | 00:11 | . 2 | 0.487746 | 0.321826 | 0.132743 | 00:11 | . 3 | 0.431170 | 0.344117 | 0.141593 | 00:11 | . 4 | 0.415534 | 0.348150 | 0.141593 | 00:11 | . interp = ClassificationInterpretation.from_learner(learn) interp.plot_top_losses(10, nrows=2) . learn.export(fname=&#39;export_dog_classifier.pkl&#39;) . path = Path() path.ls(file_exts=&#39;.pkl&#39;) #To check if it is successfully exported. . (#2) [Path(&#39;export.pkl&#39;),Path(&#39;export_dog_classifier.pkl&#39;)] . learn_inf = load_learner(path/&#39;export_dog_classifier.pkl&#39;) Image.open(&#39;FengsFiles/mycattest.jpg&#39;).to_thumb(128,128) . learn_inf.predict(&#39;FengsFiles/mycattest.jpg&#39;) # why the image and the prediction cannot been shown together if I put this line on the cell above? . (&#39;Shiba&#39;, TensorBase(0), TensorBase([0.4648, 0.4262, 0.1067, 0.0024])) . Deployment . In general, to deploy an online app, here we use IPython widgets and Voilà. . Write the necessary codes in a new notebook, store it in a new repository with export_dog_classifier.pkl. we don&#39;t need to install Voilà. We deploy it on the https://mybinder.org/ , fill in the address of the repository we create, fill in &quot;Path to a notebook file&quot; with /voila/render/Dog_Classifier.ipynb, remeber to change the option to &quot;file&quot; instead of &quot;URL&quot;. And then Lunch and wait for the success! . Check this page for clear instruction in case of forgetting: https://forums.fast.ai/t/deploying-using-binder-2021-working/84828 . A requirements.txt file is necessary in the repo for calling voila, which is not mentioned in the class. . The final result is as following: https://hub.gke2.mybinder.org/user/finns841594-dog_classifier-bu59zdrv/voila/render/Dog_Classifier.ipynb?token=saWa_1L4SZ2zaDWTk5Q1Dg .",
            "url": "https://finns841594.github.io/fengsblog/machine%20learning/2022/06/01/first-complete-practice.html",
            "relUrl": "/machine%20learning/2022/06/01/first-complete-practice.html",
            "date": " • Jun 1, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "A REVIEW (keep on updating)",
            "content": "I have nearly no practical knowledge about computer science until last year. I signed up Coursera programs named Machine Learning and Deep Learning by Andrew Ng, and I finished them half year ago, which is mid June of 2021. . Machine Learning . What is Machine Learning by a example . I know nothing about Machine Learning before this course. But Andrew explains it by a very simple practical example: house price predicting. . Imaging that you have a collection of data about price of houses and the size of them. How would you predict the price of a house which doesn&#39;t exist in your data set? . We assume that the price of a house has strong assciotation with the size of a house. It is foundamental for the following. . &#39;a photo of visualization of size of a house and price of a house&#39; . To describe the relation between two sets of associated data, there are many ways. As a beginning, lets assume they have the most simplest relation: liner regression. . linar regression can be described by a simple mathematic equation as follow: . y = a*x + b . Which is a perfect start. Because there are only two parameters to be confirmed, and then we can describe the relation between x(size of a house) and y(price of a house). . Imaging that you have a powerful computer, it starts to test the value of a and b from 0 to any other number. To evaluate every pair of a and b, the computer tests every pair of x and y. . But no matter how powerful your computer is, this process would takes forever to find the perfect value of a and b, which is, to describe the relation of x and y perfectly. . So the computer has to learn to sovle the problem in the limited time. . Learning means evaluate and then adjust it self. . To evaluate, we need to know the cost function. . Lets say our program randomly picked two numbers for our parameters a1 and b1. Then we input x1, one of the xs in our data set, to the equation a*x1 + b1, we will get a y1 as result. . The simplest way to evaluate the differences between y1 . Key concepts: main stream structures of machine learning . Deep Learning . Review of Nerual Networks .",
            "url": "https://finns841594.github.io/fengsblog/others/2022/03/05/review-of-myself.html",
            "relUrl": "/others/2022/03/05/review-of-myself.html",
            "date": " • Mar 5, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Feng's First Post",
            "content": "This is Feng&#39;s first post on his fastpage blog! . He has nearly no programming background. But he wants to learn. Because he gets to know how powerful the programing and machine learning can be. . He has a lot of good ideas. And he wants to try to express these ideas by the powerful tool of computer science. . He writes this blog for recording the process of learning, keeping notes, and sharing with those who like him. . How he starts with this? Of course the most traditional way: . print(&quot;Hello world!&quot;) . Hello world! . See you in the next post! .",
            "url": "https://finns841594.github.io/fengsblog/others/2022/02/25/first-post.html",
            "relUrl": "/others/2022/02/25/first-post.html",
            "date": " • Feb 25, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://finns841594.github.io/fengsblog/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post8": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://finns841594.github.io/fengsblog/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://finns841594.github.io/fengsblog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://finns841594.github.io/fengsblog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}